<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="classkolejkatab" kind="class" prot="public">
    <compoundname>kolejkatab</compoundname>
    <includes refid="kolejka_8hh" local="no">kolejka.hh</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classkolejkatab_1ac599259f65fa0628caec56ebed7094d1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int kolejkatab::rozmiar_tab</definition>
        <argsstring></argsstring>
        <name>rozmiar_tab</name>
        <briefdescription>
<para>Liczba elemntow ktore tablica moze pomiescic w kolejce. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Ania/workspace/zadanie/inc/kolejka.hh" line="35" bodyfile="C:/Users/Ania/workspace/zadanie/inc/kolejka.hh" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkolejkatab_1a7836e7ac5835e0a8e31ef3d2b7d04970" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int kolejkatab::liczba_elementow</definition>
        <argsstring></argsstring>
        <name>liczba_elementow</name>
        <briefdescription>
<para>Liczba elementow znajujacych sie w kolejce. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Ania/workspace/zadanie/inc/kolejka.hh" line="40" bodyfile="C:/Users/Ania/workspace/zadanie/inc/kolejka.hh" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkolejkatab_1a298bce49cbb72468057395095d213290" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* kolejkatab::tablica</definition>
        <argsstring></argsstring>
        <name>tablica</name>
        <briefdescription>
<para>Tablica Do przechowywania elementow w kolejce uzyta zostala dynamiczna alokacja pamieci. Tablica zaimplementowana jest jako tablica liczb calkowitych. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Ania/workspace/zadanie/inc/kolejka.hh" line="46" bodyfile="C:/Users/Ania/workspace/zadanie/inc/kolejka.hh" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkolejkatab_1aa6a5cc83fd0a48cefdcdc288a3abc10f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int kolejkatab::powiekszenie</definition>
        <argsstring></argsstring>
        <name>powiekszenie</name>
        <briefdescription>
<para>Powiekszenie Zmienna wykorzystana w celu oznaczenia czy powiekszenie tablicy ma byc dwa razy wieksze czy o jeden element zwiekszony. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Ania/workspace/zadanie/inc/kolejka.hh" line="52" bodyfile="C:/Users/Ania/workspace/zadanie/inc/kolejka.hh" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classkolejkatab_1a7e834bc64403f916c0ff963a057b4bb0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kolejkatab::powieksz</definition>
        <argsstring>()</argsstring>
        <name>powieksz</name>
        <briefdescription>
<para>Powiekszenie tablicy Funkcja zostala stworzona aby powiekszyc tablice dwukrotnie, w przypadku gdy bedziemy chcieli dodac element do tablicy a nam zabraknie miejsca. W funkcji tworzymy nowa tablice dwa razy wieksza niz poprzednia, nastepnie stara tablice dodajemy do nowej, stara tablica jest kasowana a stara pokazuje na nowa. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>(brak) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Ania/workspace/zadanie/inc/kolejka.hh" line="61" bodyfile="C:/Users/Ania/workspace/zadanie/src/kolejka.cpp" bodystart="12" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classkolejkatab_1a8dd26293cd2f9c566d4ddb980600c3f2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kolejkatab::pomniejsz</definition>
        <argsstring>()</argsstring>
        <name>pomniejsz</name>
        <briefdescription>
<para>Pomniejszenie tablicy Funkcja zostala stworzona aby zmniejszyc tablice dwukrotnie, w przypadku gdy liczba elementow z tablicy bedzie mniejsza badz rowna 1/4 mozliwosci tablicy. W funkcji tworzymy nowa tablice dwa razy mniejsza, nastepnie stara tablice dodajemy do nowej, stara tablica pokazuje na nowa. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>(brak) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Ania/workspace/zadanie/inc/kolejka.hh" line="70" bodyfile="C:/Users/Ania/workspace/zadanie/src/kolejka.cpp" bodystart="27" bodyend="37"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classkolejkatab_1a1f7e611a459f7717d78f32f18091cd70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>kolejkatab::kolejkatab</definition>
        <argsstring>()</argsstring>
        <name>kolejkatab</name>
        <briefdescription>
<para>Konstruktor bezargumentowy. Przy tworzeniu tablica jest pusta, w konstruktorze przydzielana jest dynamicznie, na poczatku tablica ma mozliwosc przypisania tablicy o rozmiarze 1. Jezeli nie uda sie utworzyc tablicy wyrzucany jest blad. Przy wywo³aniu konstrktora bezparametrycznego powiekszajaca tablica bedzie dwa razy wieksza. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Ania/workspace/zadanie/inc/kolejka.hh" line="79" bodyfile="C:/Users/Ania/workspace/zadanie/inc/kolejka.hh" bodystart="79" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classkolejkatab_1a2bd13cb070ac78c1fe546c670227c8df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kolejkatab::enqueue</definition>
        <argsstring>(int el_dodawany)</argsstring>
        <name>enqueue</name>
        <param>
          <type>int</type>
          <declname>el_dodawany</declname>
        </param>
        <briefdescription>
<para>Dodanie elementu z kolejki Funkcja dodaje element na poczatek kolejki, jezeli brakuje miejsca podwaja pamiec. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">el_dodawany</parametername>
</parameternamelist>
<parameterdescription>
<para>- zmienna stala, ktora ma zostac dodana na koniec stosu </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(brak) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Ania/workspace/zadanie/inc/kolejka.hh" line="97" bodyfile="C:/Users/Ania/workspace/zadanie/src/kolejka.cpp" bodystart="39" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classkolejkatab_1a90b01b396cbd0d943240206a7eab1fea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void kolejkatab::dequeue</definition>
        <argsstring>(int *a)</argsstring>
        <name>dequeue</name>
        <param>
          <type>int *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Zdejmowanie elementu z kolejki. Funkcja zdejmuje element z konca kolejki, jezeli liczba elementow bedzie mniejsza badz rowna 1/4 mozliwych elementow w tablicy, zostaje ona pomniejszana. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>- wskaznik do ktorego przypisywany jest element zdejmowany, aby mogl zostal uzyty w przyszlosci </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(brak) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Ania/workspace/zadanie/inc/kolejka.hh" line="107" bodyfile="C:/Users/Ania/workspace/zadanie/src/kolejka.cpp" bodystart="58" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classkolejkatab_1a8c132b787bfaf99734a03bae767d756c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool kolejkatab::isempty</definition>
        <argsstring>()</argsstring>
        <name>isempty</name>
        <briefdescription>
<para>Sprawdzanie pojemnosci w kolejce. Funkcja sprawdza czy jest pusta poprzez porownanie liczby_elementow do 0. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true jezeli funkcja jest pusta, w przeciwnym wypadku false. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Ania/workspace/zadanie/inc/kolejka.hh" line="113" bodyfile="C:/Users/Ania/workspace/zadanie/src/kolejka.cpp" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classkolejkatab_1a98be83a96f21b460b9baf73d92619063" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int kolejkatab::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
<para>Sprawdzenie rozmiaru funkcji Funkcja sprawdza ile elementow jest w kolejce. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>(brak) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Ania/workspace/zadanie/inc/kolejka.hh" line="119" bodyfile="C:/Users/Ania/workspace/zadanie/src/kolejka.cpp" bodystart="77" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Klasa modeluje pojecie kolejki, bazujacej na tablicy. Wykonywane sa operacje dodawnia do kolejki, zdjecia z kolejki, sprawdzenia czy jest pusta oraz sprawdzenia rozmiaru. Tablice zaalokowalam w sposob dynamiczny. Dodatkowo u¿yte niektore funkcje pomocnicze jak np. powiekszenie tablicy. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/Ania/workspace/zadanie/inc/kolejka.hh" line="29" bodyfile="C:/Users/Ania/workspace/zadanie/inc/kolejka.hh" bodystart="29" bodyend="122"/>
    <listofallmembers>
      <member refid="classkolejkatab_1a90b01b396cbd0d943240206a7eab1fea" prot="public" virt="non-virtual"><scope>kolejkatab</scope><name>dequeue</name></member>
      <member refid="classkolejkatab_1a2bd13cb070ac78c1fe546c670227c8df" prot="public" virt="non-virtual"><scope>kolejkatab</scope><name>enqueue</name></member>
      <member refid="classkolejkatab_1a8c132b787bfaf99734a03bae767d756c" prot="public" virt="non-virtual"><scope>kolejkatab</scope><name>isempty</name></member>
      <member refid="classkolejkatab_1a1f7e611a459f7717d78f32f18091cd70" prot="public" virt="non-virtual"><scope>kolejkatab</scope><name>kolejkatab</name></member>
      <member refid="classkolejkatab_1a7836e7ac5835e0a8e31ef3d2b7d04970" prot="private" virt="non-virtual"><scope>kolejkatab</scope><name>liczba_elementow</name></member>
      <member refid="classkolejkatab_1a8dd26293cd2f9c566d4ddb980600c3f2" prot="private" virt="non-virtual"><scope>kolejkatab</scope><name>pomniejsz</name></member>
      <member refid="classkolejkatab_1a7e834bc64403f916c0ff963a057b4bb0" prot="private" virt="non-virtual"><scope>kolejkatab</scope><name>powieksz</name></member>
      <member refid="classkolejkatab_1aa6a5cc83fd0a48cefdcdc288a3abc10f" prot="private" virt="non-virtual"><scope>kolejkatab</scope><name>powiekszenie</name></member>
      <member refid="classkolejkatab_1ac599259f65fa0628caec56ebed7094d1" prot="private" virt="non-virtual"><scope>kolejkatab</scope><name>rozmiar_tab</name></member>
      <member refid="classkolejkatab_1a98be83a96f21b460b9baf73d92619063" prot="public" virt="non-virtual"><scope>kolejkatab</scope><name>size</name></member>
      <member refid="classkolejkatab_1a298bce49cbb72468057395095d213290" prot="private" virt="non-virtual"><scope>kolejkatab</scope><name>tablica</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
